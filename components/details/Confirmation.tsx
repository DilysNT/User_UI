"use client"

import { useState, useEffect } from "react"
import { useRouter, useSearchParams } from "next/navigation"
import Image from "next/image"
import { Button } from "../../components/ui/button"
import { Card, CardContent } from "../../components/ui/card"
import { Separator } from "../../components/ui/separator"
import { CheckCircle2, MapPin, Calendar, Clock, Download, Home } from "lucide-react"
import QRCode from "react-qr-code";

export default function BookingConfirmationPage({ params }: { params: { id: string } }) {
  const [showQR, setShowQR] = useState(false);
  const searchParams = useSearchParams()
  const router = useRouter()
  const [bookingData, setBookingData] = useState<any>(null)
  const [paymentCompleted, setPaymentCompleted] = useState(false)
  const [bookingNumber, setBookingNumber] = useState("")

  // Mock data d·ª±a tr√™n API response m√† user cung c·∫•p
  useEffect(() => {
    // Ki·ªÉm tra m√£ gi·∫£m gi√° t·ª´ URL params ho·∫∑c localStorage
    const appliedPromoCode = searchParams.get('promo') || localStorage.getItem('appliedPromoCode');
    
    // X·ª≠ l√Ω t√≠nh to√°n gi√° theo m√£ gi·∫£m gi√°
    let mockData;
    
    if (appliedPromoCode === 'JULY2507') {
      // M√£ JULY2507: Gi·∫£m c·ªë ƒë·ªãnh 500.000ƒë
      mockData = {
        "id": "387984fb-af7d-4a86-8b5b-469d2dddd262",
        "status": "confirmed",
        "original_price": "3500000.00",
        "discount_amount": "500000.00",
        "total_price": "3000000.00", // 3.500.000 - 500.000
        "promo_code": "JULY2507",
        "booking_date": "2025-07-19T09:11:52.000Z",
      };
    } else if (appliedPromoCode === 'SUMMER2025') {
      // M√£ SUMMER2025: Gi·∫£m 10%
      mockData = {
        "id": "387984fb-af7d-4a86-8b5b-469d2dddd262", 
        "status": "confirmed",
        "original_price": "3500000.00",
        "discount_amount": "350000.00", // 10% c·ªßa 3.500.000
        "total_price": "3150000.00", // 3.500.000 - 350.000
        "promo_code": "SUMMER2025",
        "booking_date": "2025-07-19T09:11:52.000Z",
      };
    } else {
      // Kh√¥ng c√≥ m√£ gi·∫£m gi√°
      mockData = {
        "id": "387984fb-af7d-4a86-8b5b-469d2dddd262",
        "status": "confirmed", 
        "original_price": "3500000.00",
        "discount_amount": "0.00",
        "total_price": "3500000.00",
        "booking_date": "2025-07-19T09:11:52.000Z",
      };
    }
    
    // Th√™m th√¥ng tin tour, user, payment cho t·∫•t c·∫£ c√°c tr∆∞·ªùng h·ª£p
    const commonData = {
      "tour": {
        "name": "Tour du l·ªãch ƒê√† L·∫°t 4N3ƒê - Tr·∫£i nghi·ªám ng√†n hoa",
        "location": "ƒê√† L·∫°t", 
        "departure_location": "H·ªì Ch√≠ Minh",
        "images": [{"image_url": "https://res.cloudinary.com/dojbjbbjw/image/upload/v1752641022/DaLat_pdp01z.jpg", "is_main": true}]
      },
      "user": {
        "name": "Guest User",
        "email": "guest@tour.com"
      },
      "payment": {
        "payment_method": "VNPay",
        "status": "completed",
        "amount": mockData.total_price
      },
      "guests": [
        {
          "name": "NguyenVan A",
          "email": "nhom2@gmail.com", 
          "phone": "0123456789",
          "cccd": "089303002985"
        }
      ],
      "departureDate": {
        "departure_date": "2025-09-05",
        "end_date": "2025-09-06" 
      }
    };

    setBookingData({...mockData, ...commonData});
    setBookingNumber("387984fb-af7d-4a86-8b5b-469d2dddd262");
    setPaymentCompleted(true);
  }, []);

  if (!bookingData || !paymentCompleted) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-teal-500 mx-auto mb-4"></div>
          <p className="text-gray-600">ƒêang t·∫£i th√¥ng tin booking...</p>
        </div>
      </div>
    )
  }

  // Extract data t·ª´ API response
  const bookingInfo = bookingData || {};
  const paymentInfo = bookingData?.payment || {};
  const tourInfo = bookingData?.tour || {};
  const userInfo = bookingData?.user || {}; 
  const departureInfo = bookingData?.departureDate || null;
  const guestsInfo = bookingData?.guests || []; 
  
  const displayAmount = paymentInfo.amount ? Number(paymentInfo.amount) : 
                       (bookingInfo.total_price ? Number(bookingInfo.total_price) : 0);

  const primaryGuest = guestsInfo[0] || {};
  const contactName = primaryGuest.name || userInfo.name || "";
  const contactEmail = primaryGuest.email || userInfo.email || "";
  const contactPhone = primaryGuest.phone || "";

  // L·∫•y h√¨nh th·ª©c thanh to√°n
  const paymentMethod = paymentInfo.payment_method;

  console.log('üîç Payment method debug:', {
    paymentInfo,
    paymentMethod,
    paymentStatus: paymentInfo.status,
    bookingStatus: bookingInfo.status
  });

  let tourImage = "https://res.cloudinary.com/dojbjbbjw/image/upload/v1752641022/DaLat_pdp01z.jpg";
  if (tourInfo?.images && tourInfo.images.length > 0) {
    const mainImage = tourInfo.images.find((img: any) => img.is_main);
    tourImage = mainImage?.image_url || tourInfo.images[0]?.image_url || "https://res.cloudinary.com/dojbjbbjw/image/upload/v1752641022/DaLat_pdp01z.jpg";
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-4xl mx-auto px-4 space-y-8">
        {/* Header th√†nh c√¥ng */}
        <Card className="border-green-200 bg-green-50">
          <CardContent className="pt-6">
            <div className="text-center space-y-4">
              <CheckCircle2 className="w-16 h-16 text-green-600 mx-auto" />
              <h1 className="text-2xl font-bold text-gray-900">ƒê·∫∑t tour th√†nh c√¥ng!</h1>
              <p className="text-gray-600">
                C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t tour. Th√¥ng tin chi ti·∫øt ƒë√£ ƒë∆∞·ª£c g·ª≠i v·ªÅ email c·ªßa b·∫°n.
              </p>
            </div>
            
            {/* Layout m√£ tour b√™n tr√°i, button b√™n ph·∫£i */}
            <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 mt-6 px-4">
              <div className="bg-white rounded-lg p-4 flex-1 sm:flex-initial sm:min-w-0 sm:max-w-md">
                <p className="text-sm text-gray-500 mb-1">M√£ ƒë·∫∑t tour</p>
                <p className="text-sm sm:text-base font-bold text-teal-600 break-all">{bookingNumber}</p>
              </div>
              <div className="flex-shrink-0 w-full sm:w-auto">
                <Button 
                  variant="outline" 
                  className="flex items-center justify-center w-full sm:w-auto whitespace-nowrap" 
                  onClick={() => setShowQR(true)}
                >
                  <Download className="w-4 h-4 mr-2" />
                  T·∫£i v√© ƒëi·ªán t·ª≠
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Modal QR code v√© ƒëi·ªán t·ª≠ */}
        {showQR && (
          <div className="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50">
            <div className="bg-white rounded-lg p-8 shadow-lg max-w-sm w-full relative">
              <h2 className="text-lg font-semibold mb-4 text-center">M√£ QR v√© ƒëi·ªán t·ª≠</h2>
              <div className="flex justify-center mb-4">
                <div id="qr-download-wrapper">
                  <QRCode
                    id="qr-download-canvas"
                    value={[
                      `M√£ ƒë·∫∑t tour: ${bookingNumber}`,
                      `Tour: ${tourInfo.name || ""}`,
                      `ƒê·ªãa ƒëi·ªÉm: ${tourInfo.location || ""}`,
                      departureInfo?.departure_date 
                        ? `Kh·ªüi h√†nh: ${new Date(departureInfo.departure_date).toLocaleDateString("vi-VN")}` 
                        : "",
                      `Kh√°ch: ${contactName}`,
                      `SƒêT: ${contactPhone}`,
                      `T·ªïng ti·ªÅn: ${displayAmount.toLocaleString("vi-VN")}‚Ç´`,
                      paymentMethod ? `Thanh to√°n: ${paymentMethod}` : "",
                      `Tr·∫°ng th√°i: ${paymentInfo.status || "completed"}`
                    ].filter(Boolean).join("\n")}
                    size={180}
                  />
                </div>
              </div>
              <div className="text-sm text-gray-600 mb-4 text-center">
                Qu√©t m√£ QR ƒë·ªÉ ki·ªÉm tra th√¥ng tin v√© t·∫°i qu·∫ßy ho·∫∑c khi l√™n xe.
              </div>
              <div className="flex flex-col gap-2">
                <Button className="w-full" variant="outline" onClick={() => {
                  // T·∫£i QR v·ªÅ m√°y
                  const svg = document.getElementById("qr-download-canvas");
                  if (!svg) return;
                  const serializer = new XMLSerializer();
                  const svgStr = serializer.serializeToString(svg);
                  const canvas = document.createElement("canvas");
                  const img = new window.Image();
                  img.onload = function () {
                    canvas.width = img.width;
                    canvas.height = img.height;
                    const ctx = canvas.getContext("2d");
                    ctx && ctx.drawImage(img, 0, 0);
                    const pngFile = canvas.toDataURL("image/png");
                    const downloadLink = document.createElement("a");
                    downloadLink.href = pngFile;
                    downloadLink.download = `ve-dien-tu-${bookingNumber}.png`;
                    document.body.appendChild(downloadLink);
                    downloadLink.click();
                    document.body.removeChild(downloadLink);
                  };
                  img.src = 'data:image/svg+xml;base64,' + window.btoa(unescape(encodeURIComponent(svgStr)));
                }}>
                  T·∫£i m√£ v·ªÅ
                </Button>
                <Button className="w-full" onClick={() => setShowQR(false)}>ƒê√≥ng</Button>
              </div>
            </div>
          </div>
        )}

        {/* Th√¥ng tin tour */}
        <Card>
          <CardContent className="p-6">
            <h2 className="text-xl font-semibold mb-4">Th√¥ng tin tour</h2>
            <div className="flex gap-6">
              {/* H√¨nh ·∫£nh tour - compact size */}
              <div className="flex-shrink-0">
                <div className="w-48 h-32 relative rounded-lg overflow-hidden bg-gray-200">
                  <Image
                    src={tourImage}
                    alt={tourInfo.name || "Tour image"}
                    fill
                    className="object-cover"
                    priority
                  />
                </div>
              </div>
              
              {/* Th√¥ng tin chi ti·∫øt */}
              <div className="flex-1 space-y-2">
                <h3 className="text-lg font-semibold">{tourInfo.name}</h3>
                <div className="flex items-center text-gray-600">
                  <MapPin className="w-4 h-4 mr-1" />
                  <span>{tourInfo.location}</span>
                </div>
                <div className="flex items-center text-gray-600">
                  <Calendar className="w-4 h-4 mr-1" />
                  <span>Kh·ªüi h√†nh: {departureInfo?.departure_date ? new Date(departureInfo.departure_date).toLocaleDateString("vi-VN") : ""}</span>
                </div>
                {departureInfo?.end_date && (
                  <div className="flex items-center text-gray-600">
                    <Calendar className="w-4 h-4 mr-1" />
                    <span>K·∫øt th√∫c: {new Date(departureInfo.end_date).toLocaleDateString("vi-VN")}</span>
                  </div>
                )}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Th√¥ng tin thanh to√°n */}
        <Card>
          <CardContent className="p-6">
            <h2 className="text-xl font-semibold mb-4">Chi ti·∫øt thanh to√°n</h2>
            <div className="space-y-3">
              <div className="flex justify-between">
                <span className="text-gray-600">S·ªë ng∆∞·ªùi (ng∆∞·ªùi l·ªõn)</span>
                <span className="font-medium">{guestsInfo.length || 1} ng∆∞·ªùi</span>
              </div>
              
              {/* Hi·ªÉn th·ªã gi√° g·ªëc */}
              <div className="flex justify-between">
                <span className="text-gray-600">Gi√° tour g·ªëc</span>
                <span className="font-medium">
                  {Number(bookingInfo.original_price || bookingInfo.total_price).toLocaleString('vi-VN')} VNƒê
                </span>
              </div>
              
              {/* Hi·ªÉn th·ªã m√£ gi·∫£m gi√° n·∫øu c√≥ */}
              {bookingInfo.promo_code && (
                <div className="bg-green-50 border border-green-200 rounded-lg p-3">
                  <div className="flex justify-between items-center">
                    <span className="text-green-700 font-medium">
                      ‚úÖ √Åp d·ª•ng m√£ gi·∫£m gi√°: {bookingInfo.promo_code}
                    </span>
                  </div>
                  <div className="text-sm text-green-600 mt-1">
                    {bookingInfo.promo_code === 'SUMMER2025' 
                      ? 'Gi·∫£m gi√° 10% cho t·∫•t c·∫£ c√°c tour kh·ªüi h√†nh trong th√°ng 7 v√† 8.'
                      : bookingInfo.promo_code === 'JULY2507'
                      ? 'Gi·∫£m gi√° cu·ªëi th√°ng cho c√°c du kh√°ch v·ª´a h·∫øt ti·ªÅn l∆∞∆°ng'
                      : 'M√£ gi·∫£m gi√° ƒë√£ ƒë∆∞·ª£c √°p d·ª•ng'}
                  </div>
                </div>
              )}
              
              {/* Hi·ªÉn th·ªã s·ªë ti·ªÅn gi·∫£m n·∫øu c√≥ */}
              {bookingInfo.discount_amount && Number(bookingInfo.discount_amount) > 0 && (
                <div className="flex justify-between">
                  <span className="text-gray-600">S·ªë ti·ªÅn gi·∫£m</span>
                  <span className="font-medium text-green-600">
                    -{Number(bookingInfo.discount_amount).toLocaleString('vi-VN')} VNƒê
                  </span>
                </div>
              )}
              
              <div className="flex justify-between">
                <span className="text-gray-600">Gi√° tour sau gi·∫£m</span>
                <span className="font-medium">{displayAmount.toLocaleString('vi-VN')} VNƒê</span>
              </div>
              
              <div className="flex justify-between">
                <span className="text-gray-600">Ph√≠ VAT</span>
                <span className="font-medium">10%</span>
              </div>
              <Separator />
              <div className="flex justify-between font-semibold text-lg">
                <span className="text-gray-900">T·ªïng thanh to√°n</span>
                <span className="text-red-600">{displayAmount.toLocaleString('vi-VN')} VNƒê</span>
              </div>
              <Separator />
              <div className="flex justify-between">
                <span className="text-gray-600">H√¨nh th·ª©c thanh to√°n</span>
                <span className="font-medium">{
                  paymentMethod ? (
                    paymentMethod.toLowerCase() === 'vnpay' ? 'VNPay' : 
                    paymentMethod.toLowerCase() === 'momo' ? 'MoMo' : 
                    paymentMethod.toLowerCase() === 'bank' ? 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng' : 
                    paymentMethod
                  ) : 'Ch∆∞a x√°c ƒë·ªãnh'
                }</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Tr·∫°ng th√°i thanh to√°n</span>
                <span className={`font-medium ${
                  paymentInfo.status === "completed" || paymentInfo.status === "success" ? "text-green-600" :
                  paymentInfo.status === "pending" ? "text-yellow-600" :
                  paymentInfo.status === "failed" ? "text-red-600" : ""
                }`}>{
                  paymentInfo.status === "completed" || paymentInfo.status === "success" ? "Th√†nh c√¥ng" :
                  paymentInfo.status === "pending" ? "ƒêang x·ª≠ l√Ω" :
                  paymentInfo.status === "failed" ? "Th·∫•t b·∫°i" : 
                  paymentInfo.status || "Kh√¥ng x√°c ƒë·ªãnh"
                }</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Tr·∫°ng th√°i booking</span>
                <span className={`font-medium ${
                  bookingInfo.status === "confirmed" ? "text-green-600" :
                  bookingInfo.status === "pending" ? "text-yellow-600" :
                  bookingInfo.status === "cancelled" ? "text-red-600" : ""
                }`}>{
                  bookingInfo.status === "confirmed" ? "ƒê√£ x√°c nh·∫≠n" :
                  bookingInfo.status === "pending" ? "Ch·ªù x·ª≠ l√Ω" :
                  bookingInfo.status === "cancelled" ? "ƒê√£ h·ªßy" :
                  bookingInfo.status || "Kh√¥ng x√°c ƒë·ªãnh"
                }</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Th√¥ng tin li√™n h·ªá */}
        <Card>
          <CardContent className="p-6">
            <h2 className="text-xl font-semibold mb-4">Th√¥ng tin li√™n h·ªá</h2>
            <div className="space-y-2">
              <div><span className="font-medium">H·ªç t√™n:</span> {contactName}</div>
              <div><span className="font-medium">Email:</span> {contactEmail}</div>
              <div><span className="font-medium">ƒêi·ªán tho·∫°i:</span> {contactPhone}</div>
            </div>
          </CardContent>
        </Card>

        {/* L∆∞u √Ω quan tr·ªçng */}
        <Card className="border-yellow-200 bg-yellow-50">
          <CardContent className="p-6">
            <h3 className="font-semibold text-yellow-800 mb-4">L∆∞u √Ω quan tr·ªçng</h3>
            <ul className="list-disc pl-5 space-y-2 text-sm text-yellow-800">
              <li>Vui l√≤ng c√≥ m·∫∑t t·∫°i ƒëi·ªÉm t·∫≠p trung tr∆∞·ªõc gi·ªù kh·ªüi h√†nh 30 ph√∫t.</li>
              <li>Mang theo gi·∫•y t·ªù t√πy th√¢n (CMND/CCCD/H·ªô chi·∫øu) khi tham gia tour.</li>
              <li>V√© ƒëi·ªán t·ª≠ n√†y l√† b·∫±ng ch·ª©ng x√°c nh·∫≠n ƒë·∫∑t tour c·ªßa b·∫°n.</li>
              <li>Li√™n h·ªá s·ªë hotline <strong>1900 1234</strong> n·∫øu c·∫ßn h·ªó tr·ª£ th√™m th√¥ng tin.</li>
              <li>Trong tr∆∞·ªùng h·ª£p c√≥ thay ƒë·ªïi l·ªãch tr√¨nh, ch√∫ng t√¥i s·∫Ω th√¥ng b√°o tr∆∞·ªõc 24h.</li>
            </ul>
          </CardContent>
        </Card>

        {/* Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <Button
            onClick={() => router.push('/tour')}
            variant="outline"
            className="bg-white hover:bg-gray-50"
          >
            <Home className="w-4 h-4 mr-2" />
            V·ªÅ trang ch·ªß
          </Button>
          <Button
            onClick={() => router.back()}
            className="bg-teal-500 hover:bg-teal-600 text-white"
          >
            Quay l·∫°i trang tour
          </Button>
        </div>
      </div>
    </div>
  )
}
